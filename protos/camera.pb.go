// Code generated by protoc-gen-go. DO NOT EDIT.
// source: camera

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetAccessTokenResponse struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=AccessToken,proto3" json:"AccessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccessTokenResponse) Reset()         { *m = GetAccessTokenResponse{} }
func (m *GetAccessTokenResponse) String() string { return proto.CompactTextString(m) }
func (*GetAccessTokenResponse) ProtoMessage()    {}
func (*GetAccessTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_camera_bc6ecca9bc9989db, []int{0}
}
func (m *GetAccessTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccessTokenResponse.Unmarshal(m, b)
}
func (m *GetAccessTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccessTokenResponse.Marshal(b, m, deterministic)
}
func (dst *GetAccessTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccessTokenResponse.Merge(dst, src)
}
func (m *GetAccessTokenResponse) XXX_Size() int {
	return xxx_messageInfo_GetAccessTokenResponse.Size(m)
}
func (m *GetAccessTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccessTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccessTokenResponse proto.InternalMessageInfo

func (m *GetAccessTokenResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type GetMainScreenRequest struct {
	SessionID            string   `protobuf:"bytes,1,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMainScreenRequest) Reset()         { *m = GetMainScreenRequest{} }
func (m *GetMainScreenRequest) String() string { return proto.CompactTextString(m) }
func (*GetMainScreenRequest) ProtoMessage()    {}
func (*GetMainScreenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_camera_bc6ecca9bc9989db, []int{1}
}
func (m *GetMainScreenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMainScreenRequest.Unmarshal(m, b)
}
func (m *GetMainScreenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMainScreenRequest.Marshal(b, m, deterministic)
}
func (dst *GetMainScreenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMainScreenRequest.Merge(dst, src)
}
func (m *GetMainScreenRequest) XXX_Size() int {
	return xxx_messageInfo_GetMainScreenRequest.Size(m)
}
func (m *GetMainScreenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMainScreenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMainScreenRequest proto.InternalMessageInfo

func (m *GetMainScreenRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

type GetMainScreenResponse struct {
	CameraID             string   `protobuf:"bytes,1,opt,name=CameraID,proto3" json:"CameraID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMainScreenResponse) Reset()         { *m = GetMainScreenResponse{} }
func (m *GetMainScreenResponse) String() string { return proto.CompactTextString(m) }
func (*GetMainScreenResponse) ProtoMessage()    {}
func (*GetMainScreenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_camera_bc6ecca9bc9989db, []int{2}
}
func (m *GetMainScreenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMainScreenResponse.Unmarshal(m, b)
}
func (m *GetMainScreenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMainScreenResponse.Marshal(b, m, deterministic)
}
func (dst *GetMainScreenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMainScreenResponse.Merge(dst, src)
}
func (m *GetMainScreenResponse) XXX_Size() int {
	return xxx_messageInfo_GetMainScreenResponse.Size(m)
}
func (m *GetMainScreenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMainScreenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetMainScreenResponse proto.InternalMessageInfo

func (m *GetMainScreenResponse) GetCameraID() string {
	if m != nil {
		return m.CameraID
	}
	return ""
}

type SetMainScreenRequest struct {
	CameraID             string   `protobuf:"bytes,1,opt,name=CameraID,proto3" json:"CameraID,omitempty"`
	SessionID            string   `protobuf:"bytes,2,opt,name=SessionID,proto3" json:"SessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetMainScreenRequest) Reset()         { *m = SetMainScreenRequest{} }
func (m *SetMainScreenRequest) String() string { return proto.CompactTextString(m) }
func (*SetMainScreenRequest) ProtoMessage()    {}
func (*SetMainScreenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_camera_bc6ecca9bc9989db, []int{3}
}
func (m *SetMainScreenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetMainScreenRequest.Unmarshal(m, b)
}
func (m *SetMainScreenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetMainScreenRequest.Marshal(b, m, deterministic)
}
func (dst *SetMainScreenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetMainScreenRequest.Merge(dst, src)
}
func (m *SetMainScreenRequest) XXX_Size() int {
	return xxx_messageInfo_SetMainScreenRequest.Size(m)
}
func (m *SetMainScreenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetMainScreenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetMainScreenRequest proto.InternalMessageInfo

func (m *SetMainScreenRequest) GetCameraID() string {
	if m != nil {
		return m.CameraID
	}
	return ""
}

func (m *SetMainScreenRequest) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func init() {
	proto.RegisterType((*GetAccessTokenResponse)(nil), "protos.GetAccessTokenResponse")
	proto.RegisterType((*GetMainScreenRequest)(nil), "protos.GetMainScreenRequest")
	proto.RegisterType((*GetMainScreenResponse)(nil), "protos.GetMainScreenResponse")
	proto.RegisterType((*SetMainScreenRequest)(nil), "protos.SetMainScreenRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CameraServiceClient is the client API for CameraService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CameraServiceClient interface {
	GetAccessToken(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetAccessTokenResponse, error)
	GetMainScreen(ctx context.Context, in *GetMainScreenRequest, opts ...grpc.CallOption) (*GetMainScreenResponse, error)
	SetMainScreen(ctx context.Context, in *SetMainScreenRequest, opts ...grpc.CallOption) (*Empty, error)
}

type cameraServiceClient struct {
	cc *grpc.ClientConn
}

func NewCameraServiceClient(cc *grpc.ClientConn) CameraServiceClient {
	return &cameraServiceClient{cc}
}

func (c *cameraServiceClient) GetAccessToken(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetAccessTokenResponse, error) {
	out := new(GetAccessTokenResponse)
	err := c.cc.Invoke(ctx, "/protos.CameraService/GetAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) GetMainScreen(ctx context.Context, in *GetMainScreenRequest, opts ...grpc.CallOption) (*GetMainScreenResponse, error) {
	out := new(GetMainScreenResponse)
	err := c.cc.Invoke(ctx, "/protos.CameraService/GetMainScreen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cameraServiceClient) SetMainScreen(ctx context.Context, in *SetMainScreenRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protos.CameraService/SetMainScreen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CameraServiceServer is the server API for CameraService service.
type CameraServiceServer interface {
	GetAccessToken(context.Context, *Empty) (*GetAccessTokenResponse, error)
	GetMainScreen(context.Context, *GetMainScreenRequest) (*GetMainScreenResponse, error)
	SetMainScreen(context.Context, *SetMainScreenRequest) (*Empty, error)
}

func RegisterCameraServiceServer(s *grpc.Server, srv CameraServiceServer) {
	s.RegisterService(&_CameraService_serviceDesc, srv)
}

func _CameraService_GetAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).GetAccessToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.CameraService/GetAccessToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).GetAccessToken(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_GetMainScreen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMainScreenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).GetMainScreen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.CameraService/GetMainScreen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).GetMainScreen(ctx, req.(*GetMainScreenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CameraService_SetMainScreen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetMainScreenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CameraServiceServer).SetMainScreen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.CameraService/SetMainScreen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CameraServiceServer).SetMainScreen(ctx, req.(*SetMainScreenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CameraService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.CameraService",
	HandlerType: (*CameraServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAccessToken",
			Handler:    _CameraService_GetAccessToken_Handler,
		},
		{
			MethodName: "GetMainScreen",
			Handler:    _CameraService_GetMainScreen_Handler,
		},
		{
			MethodName: "SetMainScreen",
			Handler:    _CameraService_SetMainScreen_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "camera",
}

func init() { proto.RegisterFile("camera", fileDescriptor_camera_bc6ecca9bc9989db) }

var fileDescriptor_camera_bc6ecca9bc9989db = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x62, 0x4b, 0x4e, 0xcc, 0x4d,
	0x2d, 0x4a, 0x14, 0x62, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x2f, 0x96, 0x62, 0x4b, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0x53, 0xb2, 0xe2, 0x12, 0x73, 0x4f, 0x2d, 0x71, 0x4c, 0x4e, 0x4e, 0x2d, 0x2e, 0x0e,
	0xc9, 0xcf, 0x4e, 0xcd, 0x0b, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0x15, 0x52, 0xe0, 0xe2,
	0x46, 0x12, 0x96, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x42, 0x16, 0x52, 0x32, 0xe1, 0x12, 0x71,
	0x4f, 0x2d, 0xf1, 0x4d, 0xcc, 0xcc, 0x0b, 0x4e, 0x2e, 0x4a, 0x05, 0x69, 0x2d, 0x2c, 0x4d, 0x2d,
	0x2e, 0x11, 0x92, 0xe1, 0xe2, 0x0c, 0x4e, 0x2d, 0x2e, 0xce, 0xcc, 0xcf, 0xf3, 0x74, 0x81, 0xea,
	0x43, 0x08, 0x28, 0x19, 0x73, 0x89, 0xa2, 0xe9, 0x82, 0x5a, 0x28, 0xc5, 0xc5, 0xe1, 0x0c, 0x76,
	0x24, 0x5c, 0x17, 0x9c, 0xaf, 0x14, 0xc0, 0x25, 0x12, 0x8c, 0xcd, 0x2a, 0x3c, 0x7a, 0x50, 0x9d,
	0xc1, 0x84, 0xe6, 0x0c, 0xa3, 0x3b, 0x8c, 0x5c, 0xbc, 0x10, 0xa5, 0xc1, 0xa9, 0x45, 0x65, 0x99,
	0xc9, 0xa9, 0x42, 0xf6, 0x5c, 0x7c, 0xa8, 0x41, 0x21, 0xc4, 0xab, 0x07, 0x09, 0x2d, 0x3d, 0xd7,
	0xdc, 0x82, 0x92, 0x4a, 0x29, 0x39, 0x18, 0x17, 0x47, 0x88, 0xf9, 0x70, 0xf1, 0xa2, 0xf8, 0x4c,
	0x48, 0x06, 0x49, 0x03, 0x86, 0xdb, 0xa5, 0x64, 0x71, 0xc8, 0x42, 0x4d, 0xb3, 0xe1, 0xe2, 0x0d,
	0xc6, 0x6e, 0x1a, 0xb6, 0x90, 0x90, 0x42, 0x75, 0x6b, 0x12, 0x24, 0x9e, 0x8d, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x48, 0xcd, 0x2d, 0x3c, 0xf8, 0x01, 0x00, 0x00,
}
