// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Device struct {
	ID                   uint64           `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string           `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	SerialNumber         string           `protobuf:"bytes,3,opt,name=SerialNumber,proto3" json:"SerialNumber,omitempty"`
	Description          string           `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Position             string           `protobuf:"bytes,5,opt,name=Position,proto3" json:"Position,omitempty"`
	Group                string           `protobuf:"bytes,11,opt,name=Group,proto3" json:"Group,omitempty"`
	GroupID              uint64           `protobuf:"varint,12,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	DeviceType           string           `protobuf:"bytes,13,opt,name=DeviceType,proto3" json:"DeviceType,omitempty"`
	DeviceTypeID         uint64           `protobuf:"varint,14,opt,name=DeviceTypeID,proto3" json:"DeviceTypeID,omitempty"`
	DeviceModel          string           `protobuf:"bytes,15,opt,name=DeviceModel,proto3" json:"DeviceModel,omitempty"`
	DeviceModelID        uint64           `protobuf:"varint,16,opt,name=DeviceModelID,proto3" json:"DeviceModelID,omitempty"`
	Customer             string           `protobuf:"bytes,17,opt,name=Customer,proto3" json:"Customer,omitempty"`
	CustomerID           uint64           `protobuf:"varint,18,opt,name=CustomerID,proto3" json:"CustomerID,omitempty"`
	StatusCode           uint32           `protobuf:"varint,21,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Status               string           `protobuf:"bytes,22,opt,name=Status,proto3" json:"Status,omitempty"`
	Latitude             float64          `protobuf:"fixed64,23,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude            float64          `protobuf:"fixed64,24,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Actived              string           `protobuf:"bytes,25,opt,name=Actived,proto3" json:"Actived,omitempty"`
	CreatedAt            string           `protobuf:"bytes,26,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	ExtraInfo            *ExtraDeviceInfo `protobuf:"bytes,30,opt,name=ExtraInfo,proto3" json:"ExtraInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_160db74c5af75dab, []int{0}
}
func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (dst *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(dst, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Device) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Device) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *Device) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Device) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Device) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *Device) GetGroupID() uint64 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *Device) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *Device) GetDeviceTypeID() uint64 {
	if m != nil {
		return m.DeviceTypeID
	}
	return 0
}

func (m *Device) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *Device) GetDeviceModelID() uint64 {
	if m != nil {
		return m.DeviceModelID
	}
	return 0
}

func (m *Device) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

func (m *Device) GetCustomerID() uint64 {
	if m != nil {
		return m.CustomerID
	}
	return 0
}

func (m *Device) GetStatusCode() uint32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Device) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Device) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Device) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Device) GetActived() string {
	if m != nil {
		return m.Actived
	}
	return ""
}

func (m *Device) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Device) GetExtraInfo() *ExtraDeviceInfo {
	if m != nil {
		return m.ExtraInfo
	}
	return nil
}

type DeviceList struct {
	List                 []*Device `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	Count                uint64    `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
	CurrentPage          uint64    `protobuf:"varint,10,opt,name=CurrentPage,proto3" json:"CurrentPage,omitempty"`
	PageSize             uint64    `protobuf:"varint,11,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	TotalCount           uint64    `protobuf:"varint,12,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeviceList) Reset()         { *m = DeviceList{} }
func (m *DeviceList) String() string { return proto.CompactTextString(m) }
func (*DeviceList) ProtoMessage()    {}
func (*DeviceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_160db74c5af75dab, []int{1}
}
func (m *DeviceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceList.Unmarshal(m, b)
}
func (m *DeviceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceList.Marshal(b, m, deterministic)
}
func (dst *DeviceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceList.Merge(dst, src)
}
func (m *DeviceList) XXX_Size() int {
	return xxx_messageInfo_DeviceList.Size(m)
}
func (m *DeviceList) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceList.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceList proto.InternalMessageInfo

func (m *DeviceList) GetList() []*Device {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *DeviceList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *DeviceList) GetCurrentPage() uint64 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *DeviceList) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *DeviceList) GetTotalCount() uint64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

type GetDevicesRequest struct {
	Pagination           *Pagination `protobuf:"bytes,1,opt,name=Pagination,proto3" json:"Pagination,omitempty"`
	CustomerID           uint64      `protobuf:"varint,10,opt,name=CustomerID,proto3" json:"CustomerID,omitempty"`
	DeviceTypeID         uint64      `protobuf:"varint,11,opt,name=DeviceTypeID,proto3" json:"DeviceTypeID,omitempty"`
	GroupID              uint64      `protobuf:"varint,12,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	DeviceModelID        uint64      `protobuf:"varint,13,opt,name=DeviceModelID,proto3" json:"DeviceModelID,omitempty"`
	Group                string      `protobuf:"bytes,20,opt,name=Group,proto3" json:"Group,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetDevicesRequest) Reset()         { *m = GetDevicesRequest{} }
func (m *GetDevicesRequest) String() string { return proto.CompactTextString(m) }
func (*GetDevicesRequest) ProtoMessage()    {}
func (*GetDevicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_160db74c5af75dab, []int{2}
}
func (m *GetDevicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicesRequest.Unmarshal(m, b)
}
func (m *GetDevicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicesRequest.Marshal(b, m, deterministic)
}
func (dst *GetDevicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicesRequest.Merge(dst, src)
}
func (m *GetDevicesRequest) XXX_Size() int {
	return xxx_messageInfo_GetDevicesRequest.Size(m)
}
func (m *GetDevicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicesRequest proto.InternalMessageInfo

func (m *GetDevicesRequest) GetPagination() *Pagination {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *GetDevicesRequest) GetCustomerID() uint64 {
	if m != nil {
		return m.CustomerID
	}
	return 0
}

func (m *GetDevicesRequest) GetDeviceTypeID() uint64 {
	if m != nil {
		return m.DeviceTypeID
	}
	return 0
}

func (m *GetDevicesRequest) GetGroupID() uint64 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *GetDevicesRequest) GetDeviceModelID() uint64 {
	if m != nil {
		return m.DeviceModelID
	}
	return 0
}

func (m *GetDevicesRequest) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

// json字符串, 保存有不同种类的特定字段, 由Device服务解析
type ExtraDeviceInfo struct {
	Info                 string   `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtraDeviceInfo) Reset()         { *m = ExtraDeviceInfo{} }
func (m *ExtraDeviceInfo) String() string { return proto.CompactTextString(m) }
func (*ExtraDeviceInfo) ProtoMessage()    {}
func (*ExtraDeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_160db74c5af75dab, []int{3}
}
func (m *ExtraDeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtraDeviceInfo.Unmarshal(m, b)
}
func (m *ExtraDeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtraDeviceInfo.Marshal(b, m, deterministic)
}
func (dst *ExtraDeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtraDeviceInfo.Merge(dst, src)
}
func (m *ExtraDeviceInfo) XXX_Size() int {
	return xxx_messageInfo_ExtraDeviceInfo.Size(m)
}
func (m *ExtraDeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtraDeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExtraDeviceInfo proto.InternalMessageInfo

func (m *ExtraDeviceInfo) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type DeleteDeviceRequest struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteDeviceRequest) Reset()         { *m = DeleteDeviceRequest{} }
func (m *DeleteDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteDeviceRequest) ProtoMessage()    {}
func (*DeleteDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_160db74c5af75dab, []int{4}
}
func (m *DeleteDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteDeviceRequest.Unmarshal(m, b)
}
func (m *DeleteDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteDeviceRequest.Merge(dst, src)
}
func (m *DeleteDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteDeviceRequest.Size(m)
}
func (m *DeleteDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteDeviceRequest proto.InternalMessageInfo

func (m *DeleteDeviceRequest) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type DeleteGroupDeviceRequest struct {
	GroupID              uint64   `protobuf:"varint,1,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGroupDeviceRequest) Reset()         { *m = DeleteGroupDeviceRequest{} }
func (m *DeleteGroupDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGroupDeviceRequest) ProtoMessage()    {}
func (*DeleteGroupDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_160db74c5af75dab, []int{5}
}
func (m *DeleteGroupDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGroupDeviceRequest.Unmarshal(m, b)
}
func (m *DeleteGroupDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGroupDeviceRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteGroupDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGroupDeviceRequest.Merge(dst, src)
}
func (m *DeleteGroupDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGroupDeviceRequest.Size(m)
}
func (m *DeleteGroupDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGroupDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGroupDeviceRequest proto.InternalMessageInfo

func (m *DeleteGroupDeviceRequest) GetGroupID() uint64 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

type SafetyDevice struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	SerialNumber         string   `protobuf:"bytes,3,opt,name=SerialNumber,proto3" json:"SerialNumber,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Position             string   `protobuf:"bytes,5,opt,name=Position,proto3" json:"Position,omitempty"`
	Group                string   `protobuf:"bytes,11,opt,name=Group,proto3" json:"Group,omitempty"`
	GroupID              uint64   `protobuf:"varint,12,opt,name=GroupID,proto3" json:"GroupID,omitempty"`
	DeviceType           string   `protobuf:"bytes,13,opt,name=DeviceType,proto3" json:"DeviceType,omitempty"`
	DeviceTypeID         uint64   `protobuf:"varint,14,opt,name=DeviceTypeID,proto3" json:"DeviceTypeID,omitempty"`
	DeviceModel          string   `protobuf:"bytes,15,opt,name=DeviceModel,proto3" json:"DeviceModel,omitempty"`
	DeviceModelID        uint64   `protobuf:"varint,16,opt,name=DeviceModelID,proto3" json:"DeviceModelID,omitempty"`
	Customer             string   `protobuf:"bytes,17,opt,name=Customer,proto3" json:"Customer,omitempty"`
	CustomerID           uint64   `protobuf:"varint,18,opt,name=CustomerID,proto3" json:"CustomerID,omitempty"`
	Latitude             float64  `protobuf:"fixed64,21,opt,name=Latitude,proto3" json:"Latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,22,opt,name=Longitude,proto3" json:"Longitude,omitempty"`
	Actived              string   `protobuf:"bytes,25,opt,name=Actived,proto3" json:"Actived,omitempty"`
	CreatedAt            string   `protobuf:"bytes,26,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	StatusCode           uint64   `protobuf:"varint,31,opt,name=StatusCode,proto3" json:"StatusCode,omitempty"`
	Status               string   `protobuf:"bytes,32,opt,name=Status,proto3" json:"Status,omitempty"`
	MID                  uint64   `protobuf:"varint,33,opt,name=MID,proto3" json:"MID,omitempty"`
	UplinkAt             string   `protobuf:"bytes,34,opt,name=UplinkAt,proto3" json:"UplinkAt,omitempty"`
	NID                  uint64   `protobuf:"varint,35,opt,name=NID,proto3" json:"NID,omitempty"`
	AlertAt              string   `protobuf:"bytes,36,opt,name=AlertAt,proto3" json:"AlertAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SafetyDevice) Reset()         { *m = SafetyDevice{} }
func (m *SafetyDevice) String() string { return proto.CompactTextString(m) }
func (*SafetyDevice) ProtoMessage()    {}
func (*SafetyDevice) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_160db74c5af75dab, []int{6}
}
func (m *SafetyDevice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafetyDevice.Unmarshal(m, b)
}
func (m *SafetyDevice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafetyDevice.Marshal(b, m, deterministic)
}
func (dst *SafetyDevice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafetyDevice.Merge(dst, src)
}
func (m *SafetyDevice) XXX_Size() int {
	return xxx_messageInfo_SafetyDevice.Size(m)
}
func (m *SafetyDevice) XXX_DiscardUnknown() {
	xxx_messageInfo_SafetyDevice.DiscardUnknown(m)
}

var xxx_messageInfo_SafetyDevice proto.InternalMessageInfo

func (m *SafetyDevice) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SafetyDevice) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SafetyDevice) GetSerialNumber() string {
	if m != nil {
		return m.SerialNumber
	}
	return ""
}

func (m *SafetyDevice) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *SafetyDevice) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *SafetyDevice) GetGroup() string {
	if m != nil {
		return m.Group
	}
	return ""
}

func (m *SafetyDevice) GetGroupID() uint64 {
	if m != nil {
		return m.GroupID
	}
	return 0
}

func (m *SafetyDevice) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *SafetyDevice) GetDeviceTypeID() uint64 {
	if m != nil {
		return m.DeviceTypeID
	}
	return 0
}

func (m *SafetyDevice) GetDeviceModel() string {
	if m != nil {
		return m.DeviceModel
	}
	return ""
}

func (m *SafetyDevice) GetDeviceModelID() uint64 {
	if m != nil {
		return m.DeviceModelID
	}
	return 0
}

func (m *SafetyDevice) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

func (m *SafetyDevice) GetCustomerID() uint64 {
	if m != nil {
		return m.CustomerID
	}
	return 0
}

func (m *SafetyDevice) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *SafetyDevice) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *SafetyDevice) GetActived() string {
	if m != nil {
		return m.Actived
	}
	return ""
}

func (m *SafetyDevice) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *SafetyDevice) GetStatusCode() uint64 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *SafetyDevice) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *SafetyDevice) GetMID() uint64 {
	if m != nil {
		return m.MID
	}
	return 0
}

func (m *SafetyDevice) GetUplinkAt() string {
	if m != nil {
		return m.UplinkAt
	}
	return ""
}

func (m *SafetyDevice) GetNID() uint64 {
	if m != nil {
		return m.NID
	}
	return 0
}

func (m *SafetyDevice) GetAlertAt() string {
	if m != nil {
		return m.AlertAt
	}
	return ""
}

type SafetyDeviceList struct {
	List                 []*SafetyDevice `protobuf:"bytes,1,rep,name=List,proto3" json:"List,omitempty"`
	Count                uint64          `protobuf:"varint,2,opt,name=Count,proto3" json:"Count,omitempty"`
	CurrentPage          uint64          `protobuf:"varint,10,opt,name=CurrentPage,proto3" json:"CurrentPage,omitempty"`
	PageSize             uint64          `protobuf:"varint,11,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	TotalCount           uint64          `protobuf:"varint,12,opt,name=TotalCount,proto3" json:"TotalCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SafetyDeviceList) Reset()         { *m = SafetyDeviceList{} }
func (m *SafetyDeviceList) String() string { return proto.CompactTextString(m) }
func (*SafetyDeviceList) ProtoMessage()    {}
func (*SafetyDeviceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_device_160db74c5af75dab, []int{7}
}
func (m *SafetyDeviceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SafetyDeviceList.Unmarshal(m, b)
}
func (m *SafetyDeviceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SafetyDeviceList.Marshal(b, m, deterministic)
}
func (dst *SafetyDeviceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SafetyDeviceList.Merge(dst, src)
}
func (m *SafetyDeviceList) XXX_Size() int {
	return xxx_messageInfo_SafetyDeviceList.Size(m)
}
func (m *SafetyDeviceList) XXX_DiscardUnknown() {
	xxx_messageInfo_SafetyDeviceList.DiscardUnknown(m)
}

var xxx_messageInfo_SafetyDeviceList proto.InternalMessageInfo

func (m *SafetyDeviceList) GetList() []*SafetyDevice {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *SafetyDeviceList) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SafetyDeviceList) GetCurrentPage() uint64 {
	if m != nil {
		return m.CurrentPage
	}
	return 0
}

func (m *SafetyDeviceList) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SafetyDeviceList) GetTotalCount() uint64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Device)(nil), "protos.Device")
	proto.RegisterType((*DeviceList)(nil), "protos.DeviceList")
	proto.RegisterType((*GetDevicesRequest)(nil), "protos.GetDevicesRequest")
	proto.RegisterType((*ExtraDeviceInfo)(nil), "protos.ExtraDeviceInfo")
	proto.RegisterType((*DeleteDeviceRequest)(nil), "protos.DeleteDeviceRequest")
	proto.RegisterType((*DeleteGroupDeviceRequest)(nil), "protos.DeleteGroupDeviceRequest")
	proto.RegisterType((*SafetyDevice)(nil), "protos.SafetyDevice")
	proto.RegisterType((*SafetyDeviceList)(nil), "protos.SafetyDeviceList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeviceServiceClient is the client API for DeviceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceServiceClient interface {
	GetList(ctx context.Context, in *GetDevicesRequest, opts ...grpc.CallOption) (*DeviceList, error)
	Add(ctx context.Context, in *Device, opts ...grpc.CallOption) (*Empty, error)
	Update(ctx context.Context, in *Device, opts ...grpc.CallOption) (*Empty, error)
	Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*Empty, error)
}

type deviceServiceClient struct {
	cc *grpc.ClientConn
}

func NewDeviceServiceClient(cc *grpc.ClientConn) DeviceServiceClient {
	return &deviceServiceClient{cc}
}

func (c *deviceServiceClient) GetList(ctx context.Context, in *GetDevicesRequest, opts ...grpc.CallOption) (*DeviceList, error) {
	out := new(DeviceList)
	err := c.cc.Invoke(ctx, "/protos.DeviceService/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Add(ctx context.Context, in *Device, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protos.DeviceService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Update(ctx context.Context, in *Device, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protos.DeviceService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceServiceClient) Delete(ctx context.Context, in *DeleteDeviceRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protos.DeviceService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServiceServer is the server API for DeviceService service.
type DeviceServiceServer interface {
	GetList(context.Context, *GetDevicesRequest) (*DeviceList, error)
	Add(context.Context, *Device) (*Empty, error)
	Update(context.Context, *Device) (*Empty, error)
	Delete(context.Context, *DeleteDeviceRequest) (*Empty, error)
}

func RegisterDeviceServiceServer(s *grpc.Server, srv DeviceServiceServer) {
	s.RegisterService(&_DeviceService_serviceDesc, srv)
}

func _DeviceService_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DeviceService/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).GetList(ctx, req.(*GetDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Device)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DeviceService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Add(ctx, req.(*Device))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Device)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DeviceService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Update(ctx, req.(*Device))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeviceService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.DeviceService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServiceServer).Delete(ctx, req.(*DeleteDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.DeviceService",
	HandlerType: (*DeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _DeviceService_GetList_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _DeviceService_Add_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DeviceService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DeviceService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "device",
}

func init() { proto.RegisterFile("device", fileDescriptor_device_160db74c5af75dab) }

var fileDescriptor_device_160db74c5af75dab = []byte{
	// 731 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0xdd, 0x6e, 0xd3, 0x4a,
	0x10, 0xd6, 0x36, 0x69, 0x7a, 0x3a, 0x69, 0xfa, 0xb3, 0xa7, 0x3f, 0xdb, 0x9c, 0xa3, 0x62, 0x4c,
	0x2b, 0x7c, 0xd5, 0x8b, 0x50, 0x24, 0x6e, 0xa3, 0x18, 0x55, 0x96, 0xda, 0xa8, 0x72, 0xda, 0x07,
	0x70, 0xe3, 0x69, 0x64, 0x91, 0x78, 0x8d, 0xbd, 0xae, 0x28, 0x4f, 0xc1, 0x43, 0xf0, 0x00, 0x3c,
	0x09, 0xef, 0xc0, 0x15, 0xaf, 0x81, 0x76, 0x36, 0x4e, 0xec, 0xa4, 0xc0, 0x0d, 0x12, 0x5c, 0x70,
	0x95, 0xfd, 0x66, 0x66, 0x37, 0xdf, 0xee, 0x7c, 0xf3, 0xc9, 0xd0, 0x08, 0xf1, 0x3e, 0x1a, 0x22,
	0x6f, 0x24, 0xa9, 0x54, 0x32, 0x6b, 0x37, 0x86, 0x72, 0x32, 0x91, 0xb1, 0xfd, 0xb5, 0x0e, 0x0d,
	0xd7, 0xa4, 0x36, 0x61, 0xc5, 0x73, 0x05, 0xb3, 0x98, 0x53, 0xf7, 0x57, 0x3c, 0x97, 0x73, 0xa8,
	0xf7, 0x83, 0x09, 0x8a, 0x15, 0x8b, 0x39, 0xeb, 0x3e, 0xad, 0xb9, 0x0d, 0x1b, 0x03, 0x4c, 0xa3,
	0x60, 0xdc, 0xcf, 0x27, 0xb7, 0x98, 0x8a, 0x1a, 0xe5, 0x2a, 0x31, 0x6e, 0x41, 0xd3, 0xc5, 0x6c,
	0x98, 0x46, 0x89, 0x8a, 0x64, 0x2c, 0xea, 0x54, 0x52, 0x0e, 0xf1, 0x36, 0xfc, 0x73, 0x25, 0xb3,
	0x88, 0xd2, 0xab, 0x94, 0x9e, 0x61, 0xbe, 0x0b, 0xab, 0xe7, 0xa9, 0xcc, 0x13, 0xd1, 0xa4, 0x84,
	0x01, 0x5c, 0xc0, 0x1a, 0x2d, 0x3c, 0x57, 0x6c, 0x10, 0xc1, 0x02, 0xf2, 0x23, 0x00, 0xc3, 0xff,
	0xfa, 0x21, 0x41, 0xd1, 0xa2, 0x4d, 0xa5, 0x88, 0x66, 0x3c, 0x47, 0x9e, 0x2b, 0x36, 0x69, 0x7b,
	0x25, 0x66, 0x18, 0x6b, 0x7c, 0x29, 0x43, 0x1c, 0x8b, 0xad, 0x82, 0xf1, 0x2c, 0xc4, 0x8f, 0xa1,
	0x55, 0x82, 0x9e, 0x2b, 0xb6, 0xe9, 0x98, 0x6a, 0x50, 0xdf, 0xab, 0x97, 0x67, 0x4a, 0x4e, 0x30,
	0x15, 0x3b, 0xe6, 0x5e, 0x05, 0xd6, 0x3c, 0x8b, 0xb5, 0xe7, 0x0a, 0x4e, 0xdb, 0x4b, 0x11, 0x9d,
	0x1f, 0xa8, 0x40, 0xe5, 0x59, 0x4f, 0x86, 0x28, 0xf6, 0x2c, 0xe6, 0xb4, 0xfc, 0x52, 0x84, 0xef,
	0x43, 0xc3, 0x20, 0xb1, 0x4f, 0x27, 0x4f, 0x91, 0xfe, 0xcf, 0x8b, 0x40, 0x45, 0x2a, 0x0f, 0x51,
	0x1c, 0x58, 0xcc, 0x61, 0xfe, 0x0c, 0xf3, 0xff, 0x61, 0xfd, 0x42, 0xc6, 0x23, 0x93, 0x14, 0x94,
	0x9c, 0x07, 0xf4, 0x9b, 0x76, 0x87, 0x2a, 0xba, 0xc7, 0x50, 0x1c, 0xd2, 0x91, 0x05, 0xd4, 0xfb,
	0x7a, 0x29, 0x06, 0x0a, 0xc3, 0xae, 0x12, 0x6d, 0xca, 0xcd, 0x03, 0xfc, 0x25, 0xac, 0xbf, 0x7e,
	0xa7, 0xd2, 0xc0, 0x8b, 0xef, 0xa4, 0x38, 0xb2, 0x98, 0xd3, 0xec, 0x1c, 0x9c, 0x1a, 0x59, 0x9d,
	0x52, 0xc2, 0x3c, 0x8a, 0x4e, 0xfb, 0xf3, 0x4a, 0xfb, 0x23, 0x2b, 0x3a, 0x75, 0x11, 0x65, 0x8a,
	0xdb, 0x50, 0xd7, 0xbf, 0x82, 0x59, 0x35, 0xa7, 0xd9, 0xd9, 0x2c, 0x0e, 0x30, 0x15, 0x3e, 0xe5,
	0xb4, 0x16, 0x7a, 0x32, 0x8f, 0x15, 0x49, 0xb0, 0xee, 0x1b, 0xa0, 0xbb, 0xd5, 0xcb, 0xd3, 0x14,
	0x63, 0x75, 0x15, 0x8c, 0x50, 0x00, 0xe5, 0xca, 0x21, 0xd2, 0x57, 0x30, 0xc2, 0x41, 0xf4, 0x1e,
	0x49, 0x46, 0x75, 0x7f, 0x86, 0xf5, 0x3b, 0x5f, 0x4b, 0x15, 0x8c, 0xcd, 0xc1, 0x46, 0x4c, 0xa5,
	0x88, 0xfd, 0x85, 0xc1, 0xce, 0x39, 0x2a, 0xc3, 0x23, 0xf3, 0xf1, 0x6d, 0x8e, 0x99, 0xe2, 0x1d,
	0x80, 0xab, 0x60, 0x14, 0xc5, 0x01, 0x69, 0x96, 0xd1, 0xa5, 0x79, 0xc1, 0x79, 0x9e, 0xf1, 0x4b,
	0x55, 0x0b, 0x1d, 0x87, 0xa5, 0x8e, 0x2f, 0x2a, 0xb3, 0xf9, 0x88, 0x32, 0xbf, 0xaf, 0xfb, 0x25,
	0x45, 0xb6, 0x1e, 0x53, 0xe4, 0x6c, 0x9a, 0x76, 0x4b, 0xd3, 0x64, 0x9f, 0xc0, 0xd6, 0x42, 0xa3,
	0xf4, 0xb0, 0x53, 0x3f, 0x99, 0x19, 0x76, 0xea, 0xd8, 0x09, 0xfc, 0xeb, 0xe2, 0x18, 0x15, 0x4e,
	0x9b, 0x32, 0x7d, 0x8b, 0x05, 0x9f, 0xb0, 0xcf, 0x40, 0x98, 0x32, 0x3a, 0xbc, 0x5a, 0x5b, 0xe2,
	0xcf, 0x2a, 0xfc, 0xed, 0x0f, 0xab, 0xb0, 0x31, 0x08, 0xee, 0x50, 0x3d, 0xfc, 0xb5, 0x9f, 0x3f,
	0xc0, 0x7e, 0xca, 0x36, 0xb2, 0xf7, 0x23, 0x1b, 0xd9, 0xff, 0x55, 0x36, 0x52, 0x35, 0xbc, 0x27,
	0x86, 0xd1, 0xa3, 0x86, 0x67, 0x55, 0x0c, 0x6f, 0x1b, 0x6a, 0x97, 0x9e, 0x2b, 0x9e, 0xd2, 0x06,
	0xbd, 0xd4, 0xdc, 0x6f, 0x92, 0x71, 0x14, 0xbf, 0xe9, 0x2a, 0x61, 0x9b, 0x7b, 0x17, 0x58, 0x57,
	0xf7, 0x3d, 0x57, 0x3c, 0x33, 0xd5, 0x7d, 0x33, 0x52, 0xdd, 0x31, 0xa6, 0xaa, 0xab, 0xc4, 0xf1,
	0x94, 0xaf, 0x81, 0xf6, 0x27, 0x06, 0xdb, 0x65, 0x49, 0x92, 0x07, 0x39, 0x15, 0x9f, 0xda, 0x2d,
	0x66, 0xbe, 0x5c, 0xf7, 0xfb, 0xdc, 0xaa, 0xf3, 0x99, 0x15, 0xca, 0x18, 0x60, 0x4a, 0x63, 0xf4,
	0x0a, 0xd6, 0xce, 0x51, 0x11, 0xa1, 0xc3, 0x82, 0xec, 0x92, 0x9f, 0xb5, 0x79, 0xd5, 0x6f, 0xa9,
	0xfc, 0x18, 0x6a, 0xdd, 0x30, 0xe4, 0x0b, 0x56, 0xdc, 0x6e, 0xcd, 0xbc, 0x7d, 0x92, 0xa8, 0x07,
	0xfe, 0x1c, 0x1a, 0x37, 0x49, 0x18, 0x28, 0xfc, 0x59, 0xe1, 0x99, 0xfe, 0xb0, 0xd0, 0xb6, 0xc0,
	0xff, 0x9b, 0x17, 0x2e, 0xb9, 0xc9, 0xc2, 0xae, 0x5b, 0xf3, 0x7d, 0xf2, 0xe2, 0x5b, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x15, 0x2d, 0xb9, 0xec, 0xb0, 0x08, 0x00, 0x00,
}
